**********************  Sessions in Express JS ****************************

A session is a way to persist user-specific data across multiple requests in web applications. In express provides the ‘express-session’ middleware to manage the session. The below command demonstrates the ‘How to install the express-session’ module in express using the npm.

>>> npm install express express-session

Now, we have express-session in our express js application. Below are programs on how we can use this express-session middleware in our express js application.

>>>  const express = require("express");
>>>  const session = require("express-session");
>>>  const app = express();
>>>  
>>>  app.use(
>>>      session({
>>>          secret: "your-secret-key",
>>>          resave: false,
>>>         saveUninitialized: false,
>>>      })
>>>  );

Parameters------

secret: It is a key that is used to sign a session ID cookie. It must be a strong and unique secret.
resave: Forces the session to be saved back to the session store, even if the session wasn’t modified.
saveUninitialized: Forces a session that is “uninitialized” to be saved to the store. A session is uninitialized when it is new but not modified.

******************  Cookies in Express JS    *********************

It is the small pieces of data that are stored in the client’s browser. Express has a middleware ‘cookie-parser’ that is issued to set cookies. The following command installs that middleware in your application.

>>>npm install cookie-parser  .....etc